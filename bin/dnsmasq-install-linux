#!/usr/bin/env bash
# vim:set ft=bash ts=4 sw=4 et :
# shellcheck shell=bash

# Setup Dnsmasq and Systemd-resolved for *.local Hostnames
# https://hjr265.me/blog/setup-dnsmasq-and-systemd-resolved-for-local-hostnames/

set -a
orex() { "$@" || exit "$?$(printf >&2 'ERROR[%d]: %s\n' "$?" "$*")"; }
set +a

# Install Dnsmasq on Ubuntu
orex apt-get install dnsmasq

orex cat <<'EOD' >>"/etc/dnsmasq.conf"

# Route all *.localhost addresses to localhost
address=/localhost/127.0.0.1

# Don't read /etc/resolv.conf or any other configuration files.
no-resolv

# Never forward plain names (without a dot or domain part)
domain-needed

# Never forward addresses in the non-routed address spaces.
bogus-priv

# Configure Dnsmasq to listen on a different loopback address and not bind with all the interfaces
listen-address=127.0.0.113

# Here, the bind-interfaces directive is required. Without it, Dnsmasq will try to bind the wildcard address,
# even though we are configuring it to listen on just one loopback IP address.
bind-interfaces

EOD


# Finally, I can tell Systemd-resolved to use Dnsmasq for all .localhost hostnames. 
# I can do that by adding an extra [Resolve] block to the /etc/systemd/resolved.conf:
orex cat <<'EOD' >>"/etc/systemd/resolved.conf"

[Resolve]
DNS=127.0.0.113
Domains=~localhost

EOD


printf >&2 '%s\n' "DNS set for *.localhost -> 127.0.0.1"

orex systemctl restart systemd-resolved
orex systemctl restart dnsmasq
